@mixin maxH($height) {
  max-height: $height;
  overflow: hidden;
}

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    }
    @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  }
  @else {
    font-size: $fs-font-size;
  }
}


/* COLORS PROJECT */

@mixin etapes_color($color) {
	.dotline__step > .dot,
	.dotline::before,
	.dotline__step.is-active .dot::before,
	.dotline__line::before,
	.dotline__line .start  {
		background: $color;
	}
	
	.dotline__step.is-active .dot,
	.dotline__step.is-inactive .dot,
	.dotline__line .end {
		border-color: $color;
	}

	.dotline__step.is-inactive .dot {
		background: #fff;
	}

	.dotline__step.is-active .micro-legende {
		color: $color;
	}
}

@mixin project_colors($color) {
	.p-details__equi:before{
		border-color: transparent transparent $color;
	}
	.p-details__nrg i, .p-details__equi{
		background-color:$color;	
	}
	.p-details__infos{
		color:$color;
	}
	
}

@mixin card_project_colors($color) {
	background:none $color;	
}

@mixin nrj_gradient_bg($color) {	
	@include background(url("../img/bg-vector-1.png") no-repeat bottom left,radial-gradient(lighten( $color, 8% ),$color), center no-repeat $color scroll);		
}

@mixin graphbar_color($color) {
	$darkenStep: 0, 5, 10, 15, 20, 25, 30;
	@for $i from 1 through 7 {
		.graphbar__segment.citoyen:nth-child(#{$i}) {
			background: darken($color, (nth($darkenStep, $i))*1%);
		}
		.financer.citoyen:nth-child(#{$i}) .dot {
			background: darken($color, (nth($darkenStep, $i))*1%);
		}
	}
	@for $i from 1 through 6 {
		#segment-prive-#{$i} {
			background: darken($c-bglight, $i*10%);
		}
		#financer-prive-#{$i} .dot {
			background: darken($c-bglight, $i*10%);
		}
	}
}